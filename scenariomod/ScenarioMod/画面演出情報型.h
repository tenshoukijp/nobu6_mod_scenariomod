
namespace 関数 {

	/// <summary>
	/// <para>フェイドアウトして、徐々に画面を暗転させる。</para><para>メイン画面専用。戦争画面では利用できない。</para>
	/// </summary>
	void フェイドアウト();


	/// <summary>
	/// <para>暗転した状態からフェイドインして、徐々に画面を元へと戻す。</para><para>メイン画面専用。戦争画面では利用できない。</para>
	/// </summary>
	void フェイドイン();

	/// <summary>
	/// <para>フェイドアウト・フェイドインと同じだが、画面が暗転しないバージョン。</para><para>メイン画面専用。戦争画面では利用できない。</para>
	/// </summary>
	void 画面更新();


	/// <summary>
	/// 特定の城へとカメラを移動する。
	/// <para>通常は、フェイドアウト⇒カメラ移動⇒フェイドイン という使い方をするが、フェイドアウト系抜きでも動作する。</para>
	/// </summary>
	/// <param name="城番号【配列用】">対象の城の「配列用」の番号</param>
	void カメラ移動(int 城番号【配列用】);


	struct 解像度型 {
		int Ｘ;
		int Ｙ;
	};

	/// <summary>
	/// <para>天翔記のゲーム描画領域の解像度を取得する。解像度切り替わり後(※)に使用可能となる。</para>
	/// <para>(※ メソッド:On_ウィンドウ解像度切替時() の実行以後のタイミング)</para>
	/// <para>使用用途としては、「ゲーム画面の中央」などを計算するために利用する。</para>
	/// <para>返り値：「解像度型」の値。Ｘは横のピクセル数、Ｙは縦のピクセル数。</para>
	/// </summary>
	/// <param name="城番号【配列用】">「解像度型」の値。Ｘは横のピクセル数、Ｙは縦のピクセル数。</param>
	解像度型 Get_天翔記解像度();

}

