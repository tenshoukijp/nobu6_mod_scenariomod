/*
 * 相場情報型
 */
#pragma once
#pragma pack(1)

#include <windows.h>


/*
	B 米相場
	B 鉄砲相場
	B 馬相場
	B 兵相場
    「p相場情報」は「相場の読み取り」に利用すること。
*/
struct 相場情報型
{
	byte 米相場;			// 米相場  ･･･　画面表示上は1/10となる。この値が8の時、画面上での米相場は0.8となる。
	byte 鉄砲相場;			// 鉄砲相場
	byte 馬相場;			// 馬相場
	byte 兵相場;			// 兵相場
};


// 相場をセットする時には、下記関数を利用すること。
// 相場の「正確な変更」が可能なタイミングは、｢カスタム::On_相場変更直前()｣メソッドの中だけである。
namespace 関数 {

	/// <summary>
	/// 米相場を設定する。
	/// <para>(※相場の「正確な変更」が可能なタイミングは、｢カスタム::On_相場変更直前()｣メソッドの中だけである。)</para>
	/// </summary>
	/// <param name="米相場">設定したい米相場
	/// <para>画面表示上は1/10となる。</para>
	/// <para>米相場に8を指定した時、画面上では、米相場0.8となる。</para>
	/// </param>
	void Set_米相場(int 米相場);


	/// <summary>
	/// 鉄砲相場を設定する。
	/// <para>(※相場の「正確な変更」が可能なタイミングは、｢カスタム::On_相場変更直前()｣メソッドの中だけである。)</para>
	/// </summary>
	/// <param name="鉄砲相場">設定したい鉄砲相場</param>
	void Set_鉄砲相場(int 鉄砲相場);


	/// <summary>
	/// 馬相場を設定する。
	/// <para>(※相場の「正確な変更」が可能なタイミングは、｢カスタム::On_相場変更直前()｣メソッドの中だけである。)</para>
	/// </summary>
	/// <param name="馬相場">設定したい馬相場</param>
	void Set_馬相場(int 馬相場);


	/// <summary>
	/// 兵相場を設定する。
	/// <para>(※相場の「正確な変更」が可能なタイミングは、｢カスタム::On_相場変更直前()｣メソッドの中だけである。)</para>
	/// </summary>
	/// <param name="兵相場">設定したい兵相場</param>
	void Set_兵相場(int 兵相場);

}

