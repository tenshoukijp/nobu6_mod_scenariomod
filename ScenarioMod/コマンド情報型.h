/*
 * コマンド名情報
 */
#pragma once
#pragma pack(1)

#include <windows.h>
#include <string>

#include "コマンド情報列挙.h"

using namespace std;




namespace 関数 {
	/// <summary>
	/// それぞれのコマンドの行動力を設定する。
	/// <para>ここでいう行動力とは、特定のコマンドを実行した際に消費する行動力の消費値のことである。</para>
	/// </summary>
	/// <param name="行動力コマンド名">対象のコマンドのタイプ
	/// <para>「メイン画面::行動力コマンド名::講義」〜「メイン画面::行動力コマンド名::内政・訓練・昇進」に対応している。</para>
	/// </param>
	/// <param name="行動力">コマンドを実行した際に消費する「行動力の消費値」のこと。</param>
	void Set_コマンド行動力(int 行動力コマンド名, int 行動力);
}








namespace 関数 {


	/// <summary>
	/// 直後に表示されるコマンド名の文字列を変更する。
	/// <para>この関数は「以下の２つのメソッドの中でのみ」使われることを前提としている。</para>
	/// <para>
	/// <code>
	///      On_戦闘コマンド表示直前《戦争画面》(int 武将番号);
	/// </code>
	/// </para>
	/// <para>
	/// <code>
	///      On_基本コマンド表示直前《戦争画面》(int 武将番号);
	/// </code>
	/// </para>
	/// <para>他のメソッド内で利用された場合の挙動は未定である。</para>
	/// <examples>
	/// <para>例:
	/// <code>
	///      Set_コマンド名( 戦争画面::戦闘コマンド名::通常攻撃, "あばば");
	/// </code>
	/// </para>
	/// </examples>
	/// </summary>
	/// <param name="コマンド名ＩＤ">変更するコマンド名のシンボルID。
	/// <para>「戦争画面::戦闘コマンド名::通常攻撃」〜「戦争画面::戦闘コマンド名::大砲攻撃」もしくは、</para>
	/// <para>「戦争画面::基本コマンド名::鼓舞」〜「戦争画面::基本コマンド名::一喝」に対応する。</para>
	/// </param>
	/// <param name="新コマンドの文字列">対象のコマンド名に替えて表示する新しい文字列</param>
	void Set_コマンド名(int コマンド名ＩＤ, string 新コマンドの文字列);


	/// <summary>
	/// 戦争中、特定武将に対して退却コマンドをプログラム側から発動できる。
	/// <para>この関数は「以下の２つのメソッドの中でのみ」使われることを前提としている。</para>
	/// <para>
	/// <code>
	///     On_ターン変更《攻城中画面》(int ターン数);
	/// </code>
	/// </para>
	/// <para>
	/// <code>
	///      On_残りターン変更《戦争画面》(int 残りターン数);;
	/// </code>
	/// </para>
	/// <para>他のメソッド内で利用された場合の挙動は未定である。</para>
	/// </summary>
	/// <param name="武将番号【配列用】">対象となる武将の「配列用」の番号</param>
	int Do_コマンド《戦争画面》《退却》(int 武将番号【配列用】);
}




