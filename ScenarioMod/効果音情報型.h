/*
 * 効果音情報型
 */
#pragma once
#pragma pack(1)

#include <windows.h>
#include "３Ｄ位置情報型.h"

#include "効果音情報列挙.h"


namespace 関数 {

	using 音ハンドル型 = int;

	/// <summary>
	/// ユーザーが自作した「効果音用ＤＬＬ」のファイルを、ScenarioModで使えるよう登録することが出来る。
	/// <para>いくつでも登録可能。</para>
	/// <para>返り値：登録に成功すればTRUE、失敗すればFALSEが返ってくる。</para>
	/// </summary>
	/// <param name="効果音ＤＬＬ名">登録するDLLファイル名</param>
	/// <returns>登録に成功すればTRUE、失敗すればFALSEが返ってくる。</returns>
	BOOL Set_効果音ＤＬＬ追加(string 効果音ＤＬＬ名);


	/// <summary>
	/// 一般的な効果音を再生する。
	/// <para>ファイル名を指定して効果音を再生する。</para>
	/// <para>返り値：音ハンドル型の変数。</para>
	/// <para>再生後、途中で停止等の操作をする可能性がある場合、この返り値を保存しておく必要がある。</para>
	/// </summary>
	/// <param name="音源ファイル名">音楽のファイル名</param>
	/// <param name="ループ">ループするかどうか。
	/// <para>「効果音ループ::ＯＮ」もしくは「効果音ループ::ＯＦＦ」を指定する。</para>
	/// <para>省略した場合は、ループOFFである。</para>
	/// </param>
	/// <returns><para>音ハンドル型の変数。</para><para>停止等の操作をする必要がある場合、この返り値を保存しておく必要がある。</para></returns>
	音ハンドル型 効果音再生(string 音源ファイル名, BOOL ループ = 効果音ループ::ＯＦＦ);


	/// <summary>
	///  一般的な効果音を再生する。
	/// <para>DLL名と音番号を指定して効果音を再生する。</para>
	/// <para>返り値：音ハンドル型の変数。</para>
	/// <para>再生後、途中で停止等の操作をする可能性がある場合、この返り値を保存しておく必要がある。</para>
	/// </summary>
	/// <param name="効果音音源">「効果音音源::ターン開始」〜「効果音音源::雪」などが利用可能である。</param>
	/// <param name="効果音ＤＬＬ名">対象の効果音が登録してあるDLLファイル名。
	/// <para>「Set_効果音ＤＬＬ追加」をしている場合には、効果音ＤＬＬ名を指定することで、自作したＤＬＬ内の音を再生可能である。</para>
	/// <para>"" を指定した場合は、省略したものとみなし、天翔記やフル効果音キットの中から対象の効果音を再生する。</para>
	/// </param>
	/// <param name="ループ">ループするかどうか。
	/// <para>「効果音ループ::ＯＮ」もしくは「効果音ループ::ＯＦＦ」を指定する。</para>
	/// <para>省略した場合は、ループOFFである。</para>
	/// </param>
	/// <returns><para>音ハンドル型の変数。</para><para>停止等の操作をする必要がある場合、この返り値を保存しておく必要がある。</para></returns>
	音ハンドル型 効果音再生(int 効果音音源, string 効果音ＤＬＬ名 = "", BOOL ループ = 効果音ループ::ＯＦＦ);


	/// <summary>
	/// 効果音を３Ｄ空間で再生する。
	/// <para>ファイル名を指定して効果音を再生する。</para>
	/// <para>返り値：音ハンドル型の変数。</para>
	/// <para>再生後、途中で停止等の操作をする可能性がある場合、この返り値を保存しておく必要がある。</para>
	/// </summary>
	/// <param name="音源ファイル名">音楽のファイル名</param>
	/// <param name="ループ">ループするかどうか。
	/// <para>「効果音ループ::ＯＮ」もしくは「効果音ループ::ＯＦＦ」を指定する。</para>
	/// <para>省略した場合は、ループOFFである。</para>
	/// </param>
	/// <param name="位置">対象の効果音を再生する３Ｄ空間の位置。
	/// <para>省略した場合は、原点座標で再生する。</para>
	/// </param>
	/// <param name="移動／毎秒">対象の効果音が毎秒どれだけの速度で移動するか。
	/// <para>省略した場合は、移動しない。</para>
	/// </param>
	/// <returns><para>音ハンドル型の変数。</para><para>停止等の操作をする必要がある場合、この返り値を保存しておく必要がある。</para></returns>
	音ハンドル型 ３Ｄ効果音再生(string 音源ファイル名, BOOL ループ = 効果音ループ::ＯＦＦ, ３Ｄ位置型 位置 = ３Ｄ位置型(0, 0, 0), ３Ｄベクトル型 移動／毎秒 = ３Ｄベクトル型(0, 0, 0));


	/// <summary>
	/// 効果音を３Ｄ空間で再生する。
	/// <para>DLL名と音番号を指定して効果音を再生する。</para>
	/// <para>返り値：音ハンドル型の変数。</para>
	/// <para>再生後、途中で停止等の操作をする可能性がある場合、この返り値を保存しておく必要がある。</para>
	/// </summary>
	/// <param name="効果音音源">「効果音音源::ターン開始」〜「効果音音源::雪」などが利用可能である。</param>
	/// <param name="効果音ＤＬＬ名">対象の効果音が登録してあるDLLファイル名。
	/// <para>「Set_効果音ＤＬＬ追加」をしている場合には、効果音ＤＬＬ名を指定することで、自作したＤＬＬ内の音を再生可能である。</para>
	/// <para>"" を指定した場合は、省略したものとみなし、天翔記やフル効果音キットの中から対象の効果音を再生する。</para>
	/// </param>
	/// <param name="ループ">ループするかどうか。
	/// <para>「効果音ループ::ＯＮ」もしくは「効果音ループ::ＯＦＦ」を指定する。</para>
	/// <para>省略した場合は、ループOFFである。</para>
	/// </param>
	/// <param name="位置">対象の効果音を再生する３Ｄ空間の位置。
	/// <para>省略した場合は、原点座標で再生する。</para>
	/// </param>
	/// <param name="移動／毎秒">対象の効果音が毎秒どれだけの速度で移動するか。
	/// <para>省略した場合は、移動しない。</para>
	/// </param>
	/// <returns><para>音ハンドル型の変数。</para><para>停止等の操作をする必要がある場合、この返り値を保存しておく必要がある。</para></returns>
	音ハンドル型 ３Ｄ効果音再生(int 効果音音源, string 効果音ＤＬＬ名 = "", BOOL ループ = 効果音ループ::ＯＦＦ, ３Ｄ位置型 位置 = ３Ｄ位置型(0, 0, 0), ３Ｄベクトル型 移動／毎秒 = ３Ｄベクトル型(0, 0, 0));


	/// <summary>
	/// ScenarioModから再生した、１つの対象の効果音の再生を停止する。
	/// </summary>
	/// <param name="音ハンドル">対象の効果音の「音ハンドル」の変数。
	/// <para>(この「音ハンドル」は「効果音再生」系の関数の返り値で得ることが出来る。)</para>
	/// </param>
	void 効果音停止(音ハンドル型 音ハンドル);


	/// <summary>
	/// ScenarioModから再生した全ての効果音の停止する。
	/// </summary>
	void 全ての効果音停止();


	/// <summary>
	/// ＭＩＤＩを再生する際のデバイスを指定する。
	/// <para>いつでも指定できる。(途中で切り替えることも可能)</para>
	/// </summary>
	/// <param name="デバイス名">MIDIデバイスの名前
	/// <para>完全なフルネームでなくとも「部分一致文字列」でも良い</para>
	/// </param>
	void Set_ＭＩＤＩデバイス(string デバイス名);
}

