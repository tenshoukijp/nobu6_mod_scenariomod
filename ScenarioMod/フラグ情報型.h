/*
 * 部隊名情報型
 */
#pragma once
#pragma pack(1)

#include <windows.h>

namespace フラグ枠 {
	enum { メイン=0, Ａ=1, Ｂ=2, Ｃ=3, Ｄ=4, Ｅ=5, Ｆ=6, Ｇ=7, Ｈ=8 };
}

namespace 関数 {

	/// <summary>
	/// フラグ値を設定する。
	/// <para>各フラグはラベルを付けて管理する。</para>
	/// <para>フラグ情報はセーブデータに保存される。</para>
	/// <para>フラグは最大で「3000個」利用することが可能である。</para>
	/// <para>返り値：フラグを設定できた場合真。</para>
	/// <para>そのような名前のフラグが存在しなかった場合は偽</para>
	/// <para>すでに3000個のフラグを利用しており、新しいフラグを用意出来なかった場合は偽</para>
	/// <para>２度と使わなくなったフラグは、Delete_フラグすること推奨。(別のフラグがその場所を使えるようになる)</para>
	/// </summary>
	/// <param name="フラグ名">フラグに付けるラベル名みたいなもの。「最大半角8文字」まで。</param>
	/// <param name="フラグ値">フラグに設定する値。
	/// <para>「フラグ枠::メイン(デフォルト)」の場合は-13万〜+13万程度の値が利用可能。</para>
	/// <para>「フラグ枠::Ａ〜フラグ枠::Ｈ」の場合は、TURE(=1)とFALSE(=0) のみが利用可能</para>
	/// </param>
	/// <param name="フラグ枠">使用するフラグ枠を設定する。
	/// <para>「フラグ枠::メイン」「フラグ枠::Ａ〜フラグ枠::Ｈ」が使える。</para>
	/// <para>省略した場合は、フラグ枠::メインを指定したこととなる。</para>
	/// </param>
	/// <returns>フラグを設定できた場合真。
	/// <para>そのような名前のフラグが存在しなかった場合は偽</para>
	/// <para>すでに3000個のフラグを利用しており、新しいフラグを用意出来なかった場合は偽</para>
	/// </returns>
	int Set_フラグ( string フラグ名, int フラグ値, int フラグ枠=フラグ枠::メイン );


	/// <summary>
	/// フラグ値を取得する。
	/// <para>各フラグはラベルを付けて管理する。</para>
	/// <para>フラグ情報はセーブデータに保存される。</para>
	/// <para>返り値：フラグの値</para>
	/// <para>そのような名前のフラグが存在しなかった場合は偽</para>
	/// </summary>
	/// <param name="フラグ名">フラグに付けられているラベル名。「最大半角8文字」まで。</param>
	/// <param name="フラグ枠">値を取り出すフラグ枠を指定する。
	/// <para>「フラグ枠::メイン」「フラグ枠::Ａ〜フラグ枠::Ｈ」が使える。</para>
	/// <para>省略した場合は、フラグ枠::メインを指定したこととなる。</para>
	/// </param>
	/// <returns>対象のフラグ値
	/// <para>そのような名前のフラグが存在しなかった場合は偽</para>
	/// </returns>
	int Get_フラグ(string フラグ名, int フラグ枠 = フラグ枠::メイン);


	/// <summary>
	/// フラグの存在の消去。
	/// <para>セーブデータに保存する必要がなくなったフラグは消去すること。</para>
	/// </summary>
	/// <param name="フラグ名">フラグに付けられているラベル名。「最大半角8文字」まで。</param>
	int Delete_フラグ(string フラグ名);
}

